- name: Install a list of packages
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - rand





- name: copy v3ext file to "{{ my_ca_data }}"
  copy:
    src:  v3ext_ca.txt
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'

- name: copy v3ext file to "{{ my_ca_data }}"
  copy:
    src:  v3ext_gitlab.txt
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'

- name: copy v3ext file to "{{ my_ca_data }}"
  copy:
    src:  v3ext_harbor.txt
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'

- name: copy v3ext file to "{{ my_ca_data }}"
  copy:
    src:  v3ext_jenkins.txt
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'


- name: copy v3ext file to "{{ my_ca_data }}"
  copy:
    src:  v3ext_ldap.txt
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'



- name: copy ca files create_csr.sh
  copy:
    src: create_csr.sh
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'

- name: copy ca files environment
  copy:
    src: environment
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0644'
    
- name: copy issue_certs.sh
  copy:
    src: issue_certs.sh
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'

- name: copy setup_ca.sh
  copy:
    src: setup_ca.sh
    dest: "{{ my_ca_data }}"    
    owner: root
    group: root
    mode: '0755'

- name: copy signature_cert.sh
  copy:
    src: signature_cert.sh
    dest: "{{ my_ca_data }}"        
    owner: root
    group: root
    mode: '0755'

- name: copy cp_ca_htdocs.sh
  copy:
    src: cp_ca_htdocs.sh
    dest: "{{ my_ca_data }}"        
    owner: root
    group: root
    mode: '0755'


#
# 既存の証明書のアーカイブを展開
#
- name: copy certs
  copy:
    src:  certs.tgz
    dest: "{{ my_ca_data }}"        
    owner: root
    group: root
    mode: '0755'
  ignore_errors: True

- name: check exits 
  stat:
     path: "{{ my_ca_data }}/certs.tgz"
  register: certs_tgz

- name: unarchive tar
  unarchive:
    src:  "{{ my_ca_data }}/certs.tgz" 
    dest: "{{ my_ca_data }}"
    owner: root
    group: root
    mode: '0755'
  when: certs_tgz.stat.exists == true
  
#
# 既存の証明書がない場合は、新たに展開
#
- shell: |
    ./setup_ca.sh
    ./issue_certs.sh
    ./cp_ca_htdocs.sh
  args:
      chdir: "{{ my_ca_data }}"
  when: certs_tgz.stat.exists == false
